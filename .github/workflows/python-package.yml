name: Test and Publish

on: [push, pull_request, workflow_dispatch]

jobs:
    release:
        strategy:
            matrix:
                os: ["ubuntu-20.04"]
                cp: ["cp310"]

        timeout-minutes: 30

        runs-on: ${{ matrix.os }}
        name: ${{ matrix.os }} - ${{ matrix.cp }}

        steps:
            - uses: actions/checkout@v3

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip wheel setuptools
                python -m pip install --upgrade twine build

            - name: Set up QEMU
              if: runner.os == 'Linux'
              uses: docker/setup-qemu-action@v2
              with:
                platforms: all

            - name: Build wheels
              uses: pypa/cibuildwheel@v2.11.2
              env:
                CIBW_ARCHS_LINUX: auto aarch64
                CIBW_ARCHS_MACOS: x86_64 arm64 universal2
                CIBW_BUILD: |
                    ${{ matrix.cp }}-manylinux_x86_64
                    ${{ matrix.cp }}-manylinux_i686
                    ${{ matrix.cp }}-manylinux_aarch64
                    ${{ matrix.cp }}-win_amd64
                    ${{ matrix.cp }}-win32
                    ${{ matrix.cp }}-macosx_x86_64
                    ${{ matrix.cp }}-macosx_arm64
                    ${{ matrix.cp }}-macosx_universal2
                CIBW_REPAIR_WHEEL_COMMAND: "" # Disable auditwheel
                CIBW_REPAIR_WHEEL_COMMAND_LINUX: 'mv wheel dest_dir/"$(basename wheel | sed "s/-linux_/-manylinux_2_17_/")"'
                CIBW_TEST_REQUIRES: pytest
                CIBW_TEST_COMMAND: pytest -v -s {package}/tests
                CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64"
                CIBW_BUILD_VERBOSITY: 3

            - uses: actions/upload-artifact@v3
              with:
                path: ./wheelhouse/*.whl
